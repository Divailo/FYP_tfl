PROGRAM Any_Plan; /*  */

VAP_FREQUENCY 1;

CONST
            StartingStage = 1,
 /* Some variables */ CycleLength = 72.0 , /* The cycle length */
            Log = 1,
            True = 1,
            False = 0,
 RedAmberFix = 0 ;

/* ARRAYS */
ARRAY
 Plan[ 10, 9 ] = [ [09, 3, 0, 0, 0, 0, 0, 0, 0] , [24, 1, 0, 0, 0, 0, 0, 0, 0] , [56, 2, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0] ],
 DDStages[ 8, 4 ] = [ [-1, 0, 0, 0] , [-1, 0, 0, 0] , [-1, 0, 0, 0] , [-1, 0, 0, 0] , [-1, 0, 0, 0] , [-1, 0, 0, 0] , [-1, 0, 0, 0] , [-1, 0, 0, 0] ],
 PhasesInStage[ 8, 26 ] = [ [1, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] , [2, 3, 7, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] , [4, 5, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] , [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ],
 PhaseData[ 26, 2 ] = [ [7, 1] , [7, 1] , [7, 1] , [7, 1] , [5, 2] , [5, 2] , [6, 2] , [5, 2] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] , [-1, 0] ];


/* SUBROUTINES */

SUBROUTINE NextStageDD;  /* NextStageDD.vv */
D01S00Z002: Index2 := 1;
D01S02Z002: IF DDStages[Index2, 1] = -1 THEN
D01S03Z002:   IsStageDD := false
            ELSE
D01S02Z003:   IF DDStages[Index2, 1] = NextStage THEN
D01S03Z003:     IsStageDD := true;
D01S05Z003:     DetTimer := DDStages[Index2, 3]
              ELSE
D01S02Z004:     Index2 := Index2 + 1;
                GOTO D01S02Z002
              END
            END
D01PROG_ENDE: .
/*----------------------------------------------------------------------------*/
S00Z001:    IF Stage_active( 1 ) THEN
S01Z001:        IF Ped_Demand THEN
S02Z001:            Interstage( 1, 2 )
                END
            END;
S00Z003:    IF Stage_active( 2 ) THEN
S02Z003:        Interstage( 2, 1 )
            END;
S00Z005:    IF Interstage_duration( 2, 1 ) = 9 THEN
S01Z005:        cyc_sec := 0
            END;
S00Z007:    cyc_sec := cyc_sec + 1; Set_cycle_second( cyc_sec );
S00Z008:    Record_value( 1, Ped_Demand ).
/*----------------------------------------------------------------------------*/